[EVALUATION]
epochs        = 1
batch_size    = 256
batch_size_per_replica = 128
preprocessing = None

[POPULATION]
bp_pop_size    = 25
mod_pop_size   = 45
genomes_per_bp = 4

[GENOME]
dtype                = 'float32'
available_modules    = ['DenseBlock']
available_optimizers = ['Adam']

input_layers = [{'class_name': 'ZeroPadding2D', 'config': {'padding': ((3, 3), (3, 3))}},
    {'class_name': 'Conv2D', 'config': {'filters': 64, 'kernel_size': (7, 7), 'strides': (2, 2), 'use_bias': False, 'name': 'conv1/conv'}},
    {'class_name': 'BatchNormalization', 'config': {'axis': 3, 'epsilon': 1.001e-5, 'name': 'conv1/bn'}},
    {'class_name': 'Activation', 'config': {'activation': 'relu', 'name': 'conv1/relu'}},
    {'class_name': 'ZeroPadding2D', 'config': {'padding': ((1, 1), (1, 1))}},
    {'class_name': 'MaxPooling2D', 'config': {'pool_size': (3, 3), 'strides': 2, 'name': 'pool1_testing'}}]

output_layers = [{'class_name': 'BatchNormalization', 'config': {'axis': 3, 'epsilon': 1.001e-5, 'name': 'bn'}},
    {'class_name': 'Activation', 'config': {'activation': 'relu', 'name': 'relu'}},
    {'class_name': 'GlobalAveragePooling2D', 'config': {'name': 'avg_pool'}},
    {'class_name': 'Dense', 'config': {'units': 5, 'activation': 'softmax', 'name': 'predictions'}}]

[MODULE_SPECIATION]
mod_spec_type            = 'param-distance-dynamic'
mod_spec_species_count   = 4
mod_spec_distance        = 0.2
mod_spec_mod_elitism     = 2
mod_spec_min_offspring   = 1
mod_spec_reprod_thres    = 0.5
mod_spec_max_stagnation  = 6
mod_spec_species_elitism = 2
mod_spec_rebase_repr     = True
mod_spec_reinit_extinct  = False


[MODULE_EVOLUTION]
mod_max_mutation   = 0.2
mod_mutation_prob  = 0.7
mod_crossover_prob = 0.3


[BP_SPECIATION]
bp_spec_type            = 'gene-overlap-dynamic'
bp_spec_species_count   = 3
bp_spec_distance        = 0.2
bp_spec_bp_elitism      = 2
bp_spec_min_offspring   = 1
bp_spec_reprod_thres    = 0.5
bp_spec_max_stagnation  = 6
bp_spec_species_elitism = 2
bp_spec_rebase_repr     = True
bp_spec_reinit_extinct  = True


[BP_EVOLUTION]
bp_max_mutation            = 0.3
bp_mutation_add_conn_prob  = 0.2
bp_mutation_add_node_prob  = 0.2
bp_mutation_rem_conn_prob  = 0.1
bp_mutation_rem_node_prob  = 0.1
bp_mutation_node_spec_prob = 0.15
bp_mutation_optimizer_prob = 0.1
bp_crossover_prob          = 0.15

[MODULE_DENSEBLOCK]
# Specify the Dense Block parameters for CheXpert
merge_method = [{'class_name': 'Concatenate', 'config': {'axis': -1}}]
growth_rate     = {'min': 16, 'max': 40, 'step': 2, 'stddev': 4}
reduction_rate  = {'min': 0.46, 'max': 0.54, 'step': 0.01, 'stddev': 0.01}
num_layers      = {'min': -18, 'max': 26, 'step': 2, 'stddev': 6}
include_simam = 0.5
simam_placed_in_db = 0.5
kernel_init  = ['glorot_uniform', 'random_normal', 'he_normal']
bias_init    = ['zeros', 'ones']
num_dense_blocks = {'min': 2, 'max': 6, 'step': 1, 'stddev': 1}
kernel_size  = {'min': 1, 'max': 5, 'step': 1, 'stddev': 1}  # example values, adapt as needed
filters = {'min': 16, 'max': 128, 'step': 16, 'stddev': 16}

[OPTIMIZER_ADAM]
learning_rate = {'min': 0.0001, 'max': 0.0005, 'step': 0.0001, 'stddev': 0.0001}
beta_1        = {'min': 0.90, 'max': 0.901, 'step': 0.0001, 'stddev': 0.0001}
beta_2        = {'min': 0.99, 'max': 0.991, 'step': 0.0001, 'stddev': 0.0001}
epsilon       = {'min': 1e-8, 'max': 1e-7, 'step': 1e-8, 'stddev': 1e-7}
